{"ast":null,"code":"var _jsxFileName = \"/Users/johnnydomingo/Desktop/JD Dev/Clime/client/src/components/PopularCities.jsx\";\n// Dependencies\nimport { React, useState, useEffect } from \"react\"; // import { getAllCities } from \"../services/city\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PopularCities(_ref) {\n  let {\n    cities\n  } = _ref;\n  // const [cities, setCities] = useState([]);\n  // useEffect(() => {\n  //   const fetchCities = async () => {\n  //     const cityList = await getAllCities();\n  //     console.log(setCities(cityList));\n  //     setCities(cityList);\n  //   };\n  //   fetchCities();\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"city-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cities.map(city => /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"city-name\",\n          children: city.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = PopularCities;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopularCities\");","map":{"version":3,"names":["React","useState","useEffect","PopularCities","cities","map","city","location"],"sources":["/Users/johnnydomingo/Desktop/JD Dev/Clime/client/src/components/PopularCities.jsx"],"sourcesContent":["// Dependencies\nimport { React, useState, useEffect } from \"react\";\n// import { getAllCities } from \"../services/city\";\n\nexport default function PopularCities({cities}) {\n  // const [cities, setCities] = useState([]);\n  \n  // useEffect(() => {\n  //   const fetchCities = async () => {\n  //     const cityList = await getAllCities();\n  //     console.log(setCities(cityList));\n  //     setCities(cityList);\n  //   };\n  //   fetchCities();\n  // }, []);\n\n\n\n  return (\n    <div>\n      <section className=\"city-card\">\n        <div>\n          {cities.map((city) => (\n            <p id=\"city-name\">{city.location}</p>\n          ))}\n        </div>\n      </section>\n    </div>\n  )\n}"],"mappings":";AAAA;AACA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;;AAEA,eAAe,SAASC,aAAT,OAAiC;EAAA,IAAV;IAACC;EAAD,CAAU;EAC9C;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA,oBACE;IAAA,uBACE;MAAS,SAAS,EAAC,WAAnB;MAAA,uBACE;QAAA,UACGA,MAAM,CAACC,GAAP,CAAYC,IAAD,iBACV;UAAG,EAAE,EAAC,WAAN;UAAA,UAAmBA,IAAI,CAACC;QAAxB;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;KAzBuBJ,a"},"metadata":{},"sourceType":"module"}