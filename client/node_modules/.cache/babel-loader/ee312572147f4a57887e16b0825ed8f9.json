{"ast":null,"code":"var _jsxFileName = \"/Users/johnnydomingo/Desktop/JD Dev/Clime/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { React, useState, useEffect } from \"react\";\nimport { getAllCities } from \"./services/city\";\nimport PopularCities from \"./components/PopularCities\";\nimport CityWeather from \"./components/CityWeather\";\nimport axios from \"axios\";\nimport Nav from \"./components/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [data, setData] = useState({});\n  const [location, setLocation] = useState(\"\");\n  useEffect(() => {\n    const fetchCities = async () => {\n      const cityList = await getAllCities();\n      setCities(cityList); // console.log(cityList);\n    };\n\n    fetchCities();\n  }, []);\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=imperial&appid=f0f89e0388f82c90f094a7a9a8675497`;\n\n  const searchForLocation = ev => {\n    if (ev.key === \"Enter\") {\n      axios.get(url).then(response => {\n        setData(response.data);\n        console.log(response.data);\n      });\n      setLocation(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/results\",\n          element: /*#__PURE__*/_jsxDEV(Nav, {\n            location: location,\n            setLocation: setLocation,\n            searchForLocation: searchForLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(PopularCities, {\n            cities: cities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/results\",\n          element: /*#__PURE__*/_jsxDEV(CityWeather, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4UDIMjlHocLC3pANwPMRbTYdQlM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","React","useState","useEffect","getAllCities","PopularCities","CityWeather","axios","Nav","App","cities","setCities","data","setData","location","setLocation","fetchCities","cityList","url","searchForLocation","ev","key","get","then","response","console","log"],"sources":["/Users/johnnydomingo/Desktop/JD Dev/Clime/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { React, useState, useEffect } from \"react\";\nimport { getAllCities } from \"./services/city\";\nimport PopularCities from \"./components/PopularCities\";\nimport CityWeather from \"./components/CityWeather\";\nimport axios from \"axios\";\nimport Nav from \"./components/Nav\";\n\nexport default function App() {\n  const [cities, setCities] = useState([]);\n  const [data, setData] = useState({});\n  const [location, setLocation] = useState(\"\");\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      const cityList = await getAllCities();\n      setCities(cityList);\n      // console.log(cityList);\n    };\n    fetchCities();\n  }, []);\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=imperial&appid=f0f89e0388f82c90f094a7a9a8675497`;\n\n  const searchForLocation = (ev) => {\n    if (ev.key === \"Enter\") {\n      axios.get(url).then((response) => {\n        setData(response.data);\n        console.log(response.data);\n      });\n      setLocation(\"\");\n    }\n  };\n  return (\n    <div className=\"app\">\n      <Router>\n        <Routes>\n          <Route\n            path=\"/results\"\n            element={\n              <Nav\n                location={location}\n                setLocation={setLocation}\n                searchForLocation={searchForLocation}\n              />\n            }\n          ></Route>\n          <Route\n            path=\"/\"\n            element={<PopularCities cities={cities}  />}\n          ></Route>\n          <Route path=\"/results\" element={<CityWeather data={data} />}></Route>\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMa,WAAW,GAAG,YAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMb,YAAY,EAAnC;MACAO,SAAS,CAACM,QAAD,CAAT,CAF8B,CAG9B;IACD,CAJD;;IAKAD,WAAW;EACZ,CAPQ,EAON,EAPM,CAAT;EASA,MAAME,GAAG,GAAI,qDAAoDJ,QAAS,wDAA1E;;EAEA,MAAMK,iBAAiB,GAAIC,EAAD,IAAQ;IAChC,IAAIA,EAAE,CAACC,GAAH,KAAW,OAAf,EAAwB;MACtBd,KAAK,CAACe,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAqBC,QAAD,IAAc;QAChCX,OAAO,CAACW,QAAQ,CAACZ,IAAV,CAAP;QACAa,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACZ,IAArB;MACD,CAHD;MAIAG,WAAW,CAAC,EAAD,CAAX;IACD;EACF,CARD;;EASA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE,QAAC,MAAD;MAAA,uBACE,QAAC,MAAD;QAAA,wBACE,QAAC,KAAD;UACE,IAAI,EAAC,UADP;UAEE,OAAO,eACL,QAAC,GAAD;YACE,QAAQ,EAAED,QADZ;YAEE,WAAW,EAAEC,WAFf;YAGE,iBAAiB,EAAEI;UAHrB;YAAA;YAAA;YAAA;UAAA;QAHJ;UAAA;UAAA;UAAA;QAAA,QADF,eAWE,QAAC,KAAD;UACE,IAAI,EAAC,GADP;UAEE,OAAO,eAAE,QAAC,aAAD;YAAe,MAAM,EAAET;UAAvB;YAAA;YAAA;YAAA;UAAA;QAFX;UAAA;UAAA;UAAA;QAAA,QAXF,eAeE,QAAC,KAAD;UAAO,IAAI,EAAC,UAAZ;UAAuB,OAAO,eAAE,QAAC,WAAD;YAAa,IAAI,EAAEE;UAAnB;YAAA;YAAA;YAAA;UAAA;QAAhC;UAAA;UAAA;UAAA;QAAA,QAfF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;GAhDuBH,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}