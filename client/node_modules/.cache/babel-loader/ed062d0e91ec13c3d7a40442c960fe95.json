{"ast":null,"code":"var _jsxFileName = \"/Users/johnnydomingo/Desktop/JD Dev/Clime/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\"; // import { Navigate, Link } from \"react-router-dom\";\n\nimport { React, useState, useEffect } from \"react\";\nimport { getAllCities } from \"./services/city\"; // import PopularCities from \"./components/PopularCities\";\n// import CityWeather from \"./components/CityWeather\";\n\nimport Results from \"./screens/Results\";\nimport Home from \"./screens/Home\";\nimport axios from \"axios\";\nimport Nav from \"./components/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [data, setData] = useState({});\n  const [location, setLocation] = useState(\"\");\n  const [name, setName] = useState([]);\n  const URL = 'https://api.nationalize.io/?name=nathaniel';\n\n  const getNames = () => {\n    axios.get(URL).then(response => {\n      setName(response);\n      console.log(response);\n    });\n  };\n\n  useEffect(() => {\n    const fetchNames = async () => {\n      const namesList = await axios.getNames();\n    };\n  }); // useEffect(() => {\n  //   const fetchCities = async () => {\n  //     const cityList = await getAllCities();\n  //     setCities(cityList);\n  //     // console.log(cityList);\n  //   };\n  //   fetchCities();\n  // }, []);\n  // console.log(cities)\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=imperial&appid=13d18577b2830ec2f799fbc8d0818acf`;\n\n  const searchForLocation = ev => {\n    if (ev.key === \"Enter\") {\n      axios.get(url).then(response => {\n        setData(response.data); // console.log(response.data);\n      });\n      setLocation(prevLocation => prevLocation = \"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      location: location,\n      setLocation: setLocation,\n      searchForLocation: searchForLocation // render={() => <Navigate to=\"/results\" />}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          cities: cities,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/results\",\n        element: /*#__PURE__*/_jsxDEV(Results, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"S7hHfGVGKUiUwYMSq8vHs0t78i0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","React","useState","useEffect","getAllCities","Results","Home","axios","Nav","App","cities","setCities","data","setData","location","setLocation","name","setName","URL","getNames","get","then","response","console","log","fetchNames","namesList","url","searchForLocation","ev","key","prevLocation"],"sources":["/Users/johnnydomingo/Desktop/JD Dev/Clime/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\n// import { Navigate, Link } from \"react-router-dom\";\nimport { React, useState, useEffect } from \"react\";\nimport { getAllCities } from \"./services/city\";\n// import PopularCities from \"./components/PopularCities\";\n// import CityWeather from \"./components/CityWeather\";\nimport Results from \"./screens/Results\";\nimport Home from \"./screens/Home\";\nimport axios from \"axios\";\nimport Nav from \"./components/Nav\";\n\nexport default function App() {\n  const [cities, setCities] = useState([]);\n  const [data, setData] = useState({});\n  const [location, setLocation] = useState(\"\");\n  const [name, setName] = useState([]);\n\n  const URL = 'https://api.nationalize.io/?name=nathaniel';\n  const getNames = () => {\n    axios.get(URL).then((response) => {\n      setName(response);\n      console.log(response)\n    })\n  }\n  useEffect(() => {\n    const fetchNames = async () => {\n      const namesList = await axios.getNames()\n    }\n  })\n  // useEffect(() => {\n  //   const fetchCities = async () => {\n  //     const cityList = await getAllCities();\n  //     setCities(cityList);\n  //     // console.log(cityList);\n  //   };\n  //   fetchCities();\n  // }, []);\n  // console.log(cities)\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=imperial&appid=13d18577b2830ec2f799fbc8d0818acf`;\n\n  const searchForLocation = (ev) => {\n    if (ev.key === \"Enter\") {\n      axios.get(url).then((response) => {\n        setData(response.data);\n        // console.log(response.data);\n      });\n\n      setLocation((prevLocation) => (prevLocation = \"\"));\n    }\n  };\n  return (\n    <div className=\"app\">\n      <Nav\n        location={location}\n        setLocation={setLocation}\n        searchForLocation={searchForLocation}\n        // render={() => <Navigate to=\"/results\" />}\n      />\n\n      <Routes>\n        <Route path=\"/\" element={<Home cities={cities} data={data} />}></Route>\n        <Route path=\"/results\" element={<Results data={data} />}></Route>\n      </Routes>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,iBAA7B,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAMgB,GAAG,GAAG,4CAAZ;;EACA,MAAMC,QAAQ,GAAG,MAAM;IACrBZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAqBC,QAAD,IAAc;MAChCL,OAAO,CAACK,QAAD,CAAP;MACAC,OAAO,CAACC,GAAR,CAAYF,QAAZ;IACD,CAHD;EAID,CALD;;EAMAnB,SAAS,CAAC,MAAM;IACd,MAAMsB,UAAU,GAAG,YAAY;MAC7B,MAAMC,SAAS,GAAG,MAAMnB,KAAK,CAACY,QAAN,EAAxB;IACD,CAFD;EAGD,CAJQ,CAAT,CAb4B,CAkB5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,MAAMQ,GAAG,GAAI,qDAAoDb,QAAS,wDAA1E;;EAEA,MAAMc,iBAAiB,GAAIC,EAAD,IAAQ;IAChC,IAAIA,EAAE,CAACC,GAAH,KAAW,OAAf,EAAwB;MACtBvB,KAAK,CAACa,GAAN,CAAUO,GAAV,EAAeN,IAAf,CAAqBC,QAAD,IAAc;QAChCT,OAAO,CAACS,QAAQ,CAACV,IAAV,CAAP,CADgC,CAEhC;MACD,CAHD;MAKAG,WAAW,CAAEgB,YAAD,IAAmBA,YAAY,GAAG,EAAnC,CAAX;IACD;EACF,CATD;;EAUA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,GAAD;MACE,QAAQ,EAAEjB,QADZ;MAEE,WAAW,EAAEC,WAFf;MAGE,iBAAiB,EAAEa,iBAHrB,CAIE;;IAJF;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,IAAD;UAAM,MAAM,EAAElB,MAAd;UAAsB,IAAI,EAAEE;QAA5B;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,UAAZ;QAAuB,OAAO,eAAE,QAAC,OAAD;UAAS,IAAI,EAAEA;QAAf;UAAA;UAAA;UAAA;QAAA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GAtDuBH,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}