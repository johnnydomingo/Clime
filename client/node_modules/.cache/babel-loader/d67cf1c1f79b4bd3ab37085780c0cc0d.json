{"ast":null,"code":"var _jsxFileName = \"/Users/johnnydomingo/Desktop/JD Dev/Clime/client/src/components/Nav.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nav(_ref) {\n  _s();\n\n  let {\n    setQuery,\n    units,\n    setUnits\n  } = _ref;\n  const [city, setCity] = useState(\"\");\n\n  const handleUnitsChange = e => {\n    const selectedUnit = e.currentTarget.name;\n    if (units !== selectedUnit) setUnits(selectedUnit);\n  };\n\n  const handleSearchClick = () => {\n    if (city !== \"\") setQuery({\n      q: city\n    });\n  };\n\n  const handleLocationClick = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      let lat = position.coords.latitude;\n      let lon = position.coords.longitude;\n      setQuery({\n        lat,\n        lon\n      });\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: city,\n          onChange: e => setCity(e.currentTarget.value),\n          type: \"text\",\n          placeholder: \"Search for city....\",\n          className: \"text-xl font-light p-2 w-full shadow-xl focus:outline-none capitalize placeholder:lowercase\",\n          onClick: handleSearchClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row w-1/4 items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          name: \"metric\",\n          className: \"text-xl text-white font-light transition ease-out hover:scale-125\",\n          onClick: handleUnitsChange,\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl text-white mx-1\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          name: \"imperial\",\n          className: \"text-xl text-white font-light transition ease-out hover:scale-125\",\n          onClick: handleUnitsChange,\n          children: \"\\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  };\n}\n\n_s(Nav, \"NjhooW53FpaNk4X2HDZYlDFe0P4=\");\n\n_c = Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useState","Nav","setQuery","units","setUnits","city","setCity","handleUnitsChange","e","selectedUnit","currentTarget","name","handleSearchClick","q","handleLocationClick","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","value"],"sources":["/Users/johnnydomingo/Desktop/JD Dev/Clime/client/src/components/Nav.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Nav({ setQuery, units, setUnits }) {\n  const [city, setCity] = useState(\"\");\n\n  const handleUnitsChange = (e) => {\n    const selectedUnit = e.currentTarget.name;\n    if (units !== selectedUnit) setUnits(selectedUnit);\n  };\n\n  const handleSearchClick = () => {\n    if (city !== \"\") setQuery({ q: city });\n  };\n\n  const handleLocationClick = () => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      let lat = position.coords.latitude;\n      let lon = position.coords.longitude;\n\n      setQuery({\n        lat,\n        lon,\n      });\n    });\n\n\n    return (\n      <div className=\"nav\">\n        <div className=\"search\">\n          <input\n            value={city}\n            onChange={(e) => setCity(e.currentTarget.value)}\n            type=\"text\"\n            placeholder=\"Search for city....\"\n            className=\"text-xl font-light p-2 w-full shadow-xl focus:outline-none capitalize placeholder:lowercase\"\n            onClick={handleSearchClick}\n          />\n          {/* <UilSearch\n          size={25}\n          className=\"text-white cursor-pointer transition ease-out hover:scale-125\"\n          onClick={handleSearchClick}\n        />\n        <UilLocationPoint\n          size={25}\n          className=\"text-white cursor-pointer transition ease-out hover:scale-125\"\n          onClick={handleLocationClick}\n        /> */}\n        </div>\n\n        <div className=\"flex flex-row w-1/4 items-center justify-center\">\n          <button\n            name=\"metric\"\n            className=\"text-xl text-white font-light transition ease-out hover:scale-125\"\n            onClick={handleUnitsChange}\n          >\n            °C\n          </button>\n          <p className=\"text-xl text-white mx-1\">|</p>\n          <button\n            name=\"imperial\"\n            className=\"text-xl text-white font-light transition ease-out hover:scale-125\"\n            onClick={handleUnitsChange}\n          >\n            °F\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,GAAT,OAA4C;EAAA;;EAAA,IAA/B;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC;EAAnB,CAA+B;EACzD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMO,iBAAiB,GAAIC,CAAD,IAAO;IAC/B,MAAMC,YAAY,GAAGD,CAAC,CAACE,aAAF,CAAgBC,IAArC;IACA,IAAIR,KAAK,KAAKM,YAAd,EAA4BL,QAAQ,CAACK,YAAD,CAAR;EAC7B,CAHD;;EAKA,MAAMG,iBAAiB,GAAG,MAAM;IAC9B,IAAIP,IAAI,KAAK,EAAb,EAAiBH,QAAQ,CAAC;MAAEW,CAAC,EAAER;IAAL,CAAD,CAAR;EAClB,CAFD;;EAIA,MAAMS,mBAAmB,GAAG,MAAM;IAChCC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;MACrD,IAAIC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,QAA1B;MACA,IAAIC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,SAA1B;MAEArB,QAAQ,CAAC;QACPiB,GADO;QAEPG;MAFO,CAAD,CAAR;IAID,CARD;IAWA,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAK,SAAS,EAAC,QAAf;QAAA,uBACE;UACE,KAAK,EAAEjB,IADT;UAEE,QAAQ,EAAGG,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACE,aAAF,CAAgBc,KAAjB,CAF1B;UAGE,IAAI,EAAC,MAHP;UAIE,WAAW,EAAC,qBAJd;UAKE,SAAS,EAAC,6FALZ;UAME,OAAO,EAAEZ;QANX;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAsBE;QAAK,SAAS,EAAC,iDAAf;QAAA,wBACE;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAC,mEAFZ;UAGE,OAAO,EAAEL,iBAHX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAQE;UAAG,SAAS,EAAC,yBAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARF,eASE;UACE,IAAI,EAAC,UADP;UAEE,SAAS,EAAC,mEAFZ;UAGE,OAAO,EAAEA,iBAHX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATF;MAAA;QAAA;QAAA;QAAA;MAAA,QAtBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EA0CD,CAtDD;AAuDD;;GAnEuBN,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}